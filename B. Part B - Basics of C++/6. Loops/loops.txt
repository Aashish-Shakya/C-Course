 
Loop --> Is a statement that allows us to execute a statement or group of statement multiple times

Types ->

1. For Loop
/*
 For Loop Syntax :-

    for(exp1;exp2;exp3){
        block of statement
    }

exp1 -> initialisation
exp2 -> condition
exp3 -> modification/update statement

Flow of execution

exp1 --> exp2 --> block of statement --> exp3 --> exp2 -->block of statement --> exp3... 

# Omitting parts of for loop
1. Omitting init statement
    init i = 1;
    for(; i<5; i++){
        //code
    }

2.  Omitting the condition

    for(inti i=; ; i++){

        //code - this includes stop point
    }

3. Omitting final expression

for(inti i=; i<5; ){

    //code  
    i++;
}

4. Omitting Every part


*/


2. While Loop 
-> While some condition is true execute the code.

/* Syntax :-

while(condition){
    block of statement
}
    
*/

3. Do While Loop - executed  atleast once
Bcz first time ccondition is not going to check.
/* Syntax ->  
    do{
        block of statement
    } while(condition);
*/

4. For Each Loop
Fo each Loop Syntax :-

    for(intialization:array){
        //block of statement
    }
    Will dicuss in arrays

5. Nested Loop
Loop inside loop are called nexted loops.



# Loop Control Statement --> CHange execution from its normal sequence

1. break -> Used to come out of the nearest loop statement
2. continue -> Used to skip the next iteration
3. goto -> Tranfer control to the labeled statement
 